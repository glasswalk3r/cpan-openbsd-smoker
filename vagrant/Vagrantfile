# frozen_string_literal: true

# This software is copyright (c) 2017 of Alceu Rodrigues de Freitas Junior,
# arfreitas@cpan.org
#
# This file is part of CPAN OpenBSD Smoker.
#
# CPAN OpenBSD Smoker is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CPAN OpenBSD Smoker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CPAN OpenBSD Smoker.  If not, see http://www.gnu.org/licenses.

# -*- mode: ruby -*-
# vi: set ft=ruby :

################################################################
# CONFIGURABLE STEPS
################################################################
# You can and must verify values used to configure the environment.
# Be sure to read the comments as well, as they work as documentation.
# Before running, remember to copy a "metabase_id.json" file to the
# subdirectory "metabase" where this Vagrantfile is located
################################################################

# The username to associate with the user that will run the CPAN smoker.
# This is required to avoid giving too much privileges with sudo.
cpan_user = 'goku'

# The public SSH key to add to the authorized_key cpan_user SSH configuration.
# Defaults to an SSH key point to your current user OpenSSH standard directory.
cpan_user_pub_key = "#{ENV['HOME']}/.ssh/vagrant.pub"

# setup the OpenBSD closest mirror you want to use. Use just the base URL,
# like "openbsd.c3sl.ufpr.br". The rest will be guessed by the related
# script.
openbsd_mirror = 'openbsd.c3sl.ufpr.br'

# setups the expected time zone the VM will be running
timezone = 'America/Sao_Paulo'

# configures Vim backup dir, to avoid leaving temporary files everywhere
vim_backup_dir = 'backup'

# the number of CPU's the VM will have, this also defines the number of parallel
# tasks to be executed with Make
cpus = 2

# Customize the amount of memory on the VM. Consider that video RAM is 1MB by
# default.
memory = 2048

# build_dir MFS size, taken from memory, in MB
mfs_size = 512

# keyboard encoding, see wsconsctl manpage for details
keyboard = 'br'

# OpenBSD version: acceptable values are 7.0 and 7.1
openbsd_version = '7.1'
# OpenBSD architecture: acceptable values are i386 and amd64
openbsd_arch = 'i386'

# Perl CPAN section

# cpan_mirror: setup the CPAN closest mirror you want to use. It can be even a
# one on your local network built with CPAN::Mini and Nginx.
# See http://mirrors.cpan.org/ for a "real" mirror.
# You can also use one on the local network or even the VM host itself
cpan_mirror = 'http://192.168.1.124:8090'
# Set to true below if you want to have a minicpan mirror inside the VM since
# it takes a considerable time to configure one, it is set to false by default.
# If you already have a mirror (in the VM host or your local network) you
# probably will want to leave this as is.
# If set to true, this will configure a local directory to hold the mirrored
# files, configure the cpan client, CPAN::Mini and create a "minicpan" alias
use_local_mirror = false

# See https://metacpan.org/pod/CPAN::Reporter::Smoker#USAGE for details of the
# following options
clean_cache_after = 100

# in seconds
restart_delay = 604_800

# reports_from is from which person CPAN reports are being sent, see
# CPAN::Reporter for details on that.
reports_from = '"Alceu Rodrigues de Freitas Junior" <arfreitas@cpan.org>'

# cpan_build_dir is something you shouldn't change unless you know what
# you're doing.
# Here, the path defined is to use a MFS mount point to speed up things
cpan_build_dir = '/mnt/cpan_build_dir'

# prefs_dir is the same configuration option available to the cpan client
# The path is relative to the user home directory
prefs_dir = 'cpan-openbsd-smoker/prefs'

################################################################
# END OF USER CONFIGURATIONS
################################################################

Vagrant.configure('2') do |config|
  config.ssh.shell = 'ksh -l'
  config.vm.box = "arfreitas/openbsd-#{openbsd_version}-cpan-smoker-#{openbsd_arch}"
  config.vm.box_check_update = false
  config.vm.hostname = 'cpan-smoker-openbsd'
  config.vm.synced_folder '/tmp', '/vagrant', disabled: true
  # If you're using https://github.com/dotless-de/vagrant-vbguest, uncomment
  # the line below to avoid receiving warnings (OpenBSD doesn't support
  # VirtualBox Guest additions)
  config.vbguest.auto_update = false

  config.vm.provider 'virtualbox' do |vb|
    # Display the VirtualBox GUI when booting the machine
    # Useful for troubleshooting when true
    vb.gui = false
    vb.check_guest_additions = false
    vb.memory = memory
    vb.cpus = cpus
    vb.name = 'OpenBSD CPAN Smoker'
    # You may want to hide your network name given by the internal DHCP server.
    vb.customize ['modifyvm', :id, '--natdnspassdomain1', 'off']
    # Using the host resolver
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
    vb.customize ['modifyvm', :id, '--uartmode1', 'disconnected']
    vb.customize ['modifyvm', :id, '--nic1', 'nat', '--nictype1', '82540EM']
    vb.customize ['modifyvm', :id, '--vrde', 'off']
    vb.customize ['modifyvm', :id, '--vram', 1]
  end

  config.vm.define 'single'

  config.vm.provision 'ansible' do |ansible|
    ansible.playbook = 'playbook.yml'
    ansible.compatibility_mode = '2.0'
    ansible.host_vars = {
      'single' => {
        'cpan_user' => cpan_user,
        'cpan_mirror' => cpan_mirror,
        'cpan_build_dir' => cpan_build_dir,
        'reports_from' => reports_from,
        'cpan_user_pub_key' => cpan_user_pub_key,
        'vim_backup_dir' => vim_backup_dir,
        'make_jobs' => cpus,
        'prefs_dir' => prefs_dir,
        'clean_cache_after' => clean_cache_after,
        'restart_delay' => restart_delay,
        'openbsd_mirror' => openbsd_mirror,
        'use_local_mirror' => use_local_mirror.to_s,  # Ansible will receive a string anyway
        'mfs_size' => mfs_size
      }
    }
  end

  config.vm.provision 'shell', name: 'Setting keyboard', inline: "/sbin/wsconsctl keyboard.encoding=#{keyboard}"
  config.vm.provision 'shell', name: 'Setting timezone', inline: "/usr/sbin/zic -l #{timezone}"
  config.vm.provision 'shell', name: 'Remounting all partitions', inline: 'mount -a'

  config.vm.post_up_message = <<MESSAGE
  Remember to execute the following manual steps after provisioning is finished:
    1 - Configure passwords for the new users with 'passwd'. Change the default
    password of your defined user, vagrant user and root.
    2 - Run the program /usr/local/bin/smoker_install with the chosen user to
    install the smoker for that user. This setup will already generate testing
    reports that will be stored at the $HOME/ready_reports directory.
    3 - Spend some time validating tests results. Tests will not be submitted
    automatically, but saved to a local directory before submission. This will
    give you a chance to validate the smoker configuration before submission.
    4 - Submit reports with the script 'send_reports'. Check out it's
    documentation with 'perldoc send_reports'. Skip reports with "unknown" grade
    until you're sure the errors weren't caused by the smoker itself.
    5 - If some distribution halts the smoker, block it with 'dblock'. Check out
    it's documentation with 'perldoc dblock'.
MESSAGE
end
