# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "arfreitas/openbsd-6.0-cpan-smoker"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1548"
     vb.name = "OpenBSD6.Smoker"
  end

  ################################################################
  # CONFIGURABLE STEPS
  ################################################################
  # You can and must verify values used to configure the environment.
  # Be sure to read the comments as well, as they server as documentation.
  # Before running, remember to copy a "metabase_id.json" file to the subdirectory "metabase" where this Vagrantfile is located
  ################################################################
  
  # setup the OpenBSD closest mirror you want to use. Use just the base URL, 
  # like "http://openbsd.c3sl.ufpr.br". The rest will be guessed by the shell script.
  openbsd_mirror="http://openbsd.c3sl.ufpr.br"
  
  # cpan_mirror: setup the CPAN closest mirror you want to use
  cpan_mirror="http://mirror.nbtelecom.com.br/CPAN"
  
  # the perlbrew homepage. Shouldn't be necessary to change it
  perlbrew_url="https://install.perlbrew.pl"
  
  #user_1, user_2: the names of users you want to execute the smoker. If you want more, you will have to customize the config_smoker.sh and the VM itself
  user_1="foo"
  user_2="bar"
  
  # perl_1, perl_2: the name of perl to install, as provided by "perlbrew available" command to the respective user
  perl_1="perl-5.20.3"
  perl_2="perl-5.24.1"
  
  # reports_from is from which person CPAN reports are being sent, see CPAN::Reporter for details on that
  # be extra careful about maintaining the single quotes below, otherwise you might get trouble with Bash argument parsing
  reports_from="'Alceu Rodrigues de Freitas Junior <arfreitas@cpan.org>'"
  
  # Number of CPUs
  # Please consider that each user that will run the Smoker will use a CPU. That's not entirely true, but a single CPU should be enough for a smoker process
  # If you want more users, add more CPUs
  # The vagrant user will run metabase-relayd, but this daemon user very little CPU too (when not executing).
  processors=2
  
  # cpan_build_dir is something you shouldn't change unless you know what you're doing
  cpan_build_dir="/mnt/cpan_build_dir"
  
  # keyboard encoding, see wsconsctl manpage for details
  keyboard="br"
  
  # this should be left alone (config.vm.provision)
  config.vm.provision "file", source: "scripts/config_user.sh", destination: "/tmp/config_user.sh"
  config.vm.provision "shell", inline: "chmod a+rx /tmp/config_user.sh"
  config.vm.provision "file", source: "metabase/metabase_id.json", destination: "/tmp/metabase_id.json"
  config.vm.provision "shell", inline: "chmod a+r /tmp/metabase_id.json"
  config.vm.provision "shell", path: "scripts/basic_setup.sh", args: [openbsd_mirror, keyboard]
  config.vm.provision "shell", path: "scripts/vagrant_user.sh", args: [cpan_mirror], privileged: false
  config.vm.provision "shell", path: "scripts/config_smoker.sh", args: [openbsd_mirror, cpan_mirror, user_1, perl_1, user_2, perl_2, cpan_build_dir, processors, reports_from]
  config.vm.provision "shell", inline: "rm -f /tmp/metabase_id.json"
  config.vm.post_up_message = <<MESSAGE
  Remember to execute the following manual steps after provisioning is finished:
    1 - Configure passwords for the new users with passwd. Change the default password of vagrant user and configure a new SSH key for it.
    2 - Spend some time validating tests results. Tests will not be submitted automatically, but saved to a local directory before submission. This will give you a chance to validate the smoker configuration first.
    3 - Once everything is fine, start the metabase-relayd application with the vagrant user.
    4 - Submit reports with the script bin/send_reports.pl.
    5 - If some distribution halts the smoker, block it with bin/block.pl.
MESSAGE
end
